# comp2 = c("littoral.PC2","pelagic.PC2","smallprey.PC2","predator.PC2","Tot.rich")
comp3 = c(paste("littoral",".","MDS",1:6,sep=""),
paste("pelagic",".","MDS",1:6,sep=""),
paste("smallprey",".","MDS",1:6,sep=""),
paste("predator",".","MDS",1:6,sep=""),
"Tot.rich")
##################
#Generate composite variables for composition
##################
FUN = c("littoral","pelagic","smallprey","predator")
composite = data.frame()[1:nrow(can.dat),]
rownames(composite) = 1:nrow(can.dat)
for(i in 1:length(FUN)) {
var = comp3[grep(FUN[i],comp3)]
equation  = as.formula(paste("Tot.rich ~ ",paste(var,collapse="+")))
lmod = lm(equation,data=can.dat)#;summary(lmod)
dat = lmod$coefficients[2]*can.dat[,paste(var[1])] + lmod$coefficients[3]*can.dat[,paste(var[2])] + lmod$coefficients[4]*can.dat[,paste(var[3])] + lmod$coefficients[5]*can.dat[,paste(var[4])] + lmod$coefficients[6]*can.dat[,paste(var[5])] + lmod$coefficients[7]*can.dat[,paste(var[6])]
#dat = 1*can.dat[,paste(var[1])] + can.dat[,paste(var[2])] + can.dat[,paste(var[3])] + can.dat[,paste(var[4])] + can.dat[,paste(var[5])] + can.dat[,paste(var[6])]
dat2 = assign("littoral.comp",dat)
composite = cbind(composite,dat2)
colnames(composite)[i] = paste(FUN[i],"comp",sep=".")
}
############# Data structure for SEM - CANADA
#########################################################################
##################
#Extract predictors of interest
##################
en.var = c('Latitude','Area','Depth','Elevation','DegreeDays','TotP')
can.var = c(en.var,'land1','land2','Tot.rich')
##################
#Verify co-linearity among predictors and frequency distribution of each predictor
##################
library(vegan)
x = cbind(can.dat[,can.var],composite)
x[,en.var[-1]] = decostand(x[,en.var[-1]],"log")
library(psych)
pdf(paste0(to.figure,'Cor_matrix_CA_MDS.pdf'),width=15,height = 10)
pairs.panels(x,smooth=F,density=T,ellipses=F,lm=T,digits=2,scale=T, cor = T, rug=T, main = "Canada")
dev.off()
detach("package:psych", unload=TRUE)
#Interesting examples:
#Area is cor=0.57 with tot.richness and is cor=-57 with pelagic fish composition
#This suggests that the effect is mediated by a change in pelagic fish.
#Latitude is cor=-62 with small preys and is cor=-62 with land use1
#########################################################################
################# Structural Equation Modelling
#########################################################################
#Load packages
library(lavaan)
library(AICcmodavg)
summary(x)
lala = lm(Tot.rich ~ pelagic.comp + littoral.comp + predator.comp + smallprey.comp, data=x);summary(lala)
head(x)
head(can.var)
head(can.dat)
comp1 = c("littoral.MDS1","pelagic.MDS1","smallprey.MDS1","predator.MDS1")
en.var = c('Latitude','Area','Depth','Elevation','DegreeDays','TotP')
can.var = c(en.var,'land1','land2','Tot.rich',comp1)
x = cbind(can.dat[,can.var],composite)
x[,en.var[-1]] = decostand(x[,en.var[-1]],"log")
library(psych)
pdf(paste0(to.figure,'Cor_matrix_CA_MDS.pdf'),width=15,height = 10)
pairs.panels(x,smooth=F,density=T,ellipses=F,lm=T,digits=2,scale=T, cor = T, rug=T, main = "Canada")
dev.off()
detach("package:psych", unload=TRUE)
install.packages("~/Documents/Research/1.projects/Eawag/Projects/12.RivNet/SwissRiverPlot", repos = NULL, type="source")
Dat <- "~/Documents/Research/1.projects/Eawag/Projects/12.RivNet/rivnet/Data" #Working directory for data
Script <- "~/Documents/Research/1.projects/Eawag/Projects/12.RivNet/rivnet/Scripts" #Working directory for scripts
setwd(Dat)
library(SwissRiverPlot)
library(plotrix)
#library(vegan)
# library(maps)
# library(mapproj)
# library(mapdata)
source(paste0(Script,"/floating.pieF.R"))
source(paste0(Script,"/scale_bar.R"))
# source(paste0(Script,"/drop.levels.R"))
# source(paste0(Script,"/errbar_color.R"))
# source(paste0(Script,"/slope.test.R"))
# source(paste0(Script,"/river_plot2.R"))
load(paste0(Dat,"/Rivnet_SEM.RData"))
?river_plot()
river_plot(plot_ticino=F, plot_inn=F,plot_rhone=F,axes="degree")
river_plot(ticino=F, inn=F,rhone=F,axes="degree")
river_plot(border_outline = T, width_border = 2,
plot_rhone=F, plot_ticino=F, plot_inn=F,lines_rhone=F, lines_ticino=F, lines_inn=F,
width_order = T, cex_order=1,axes="degree")
river_plot(border_outline = T, width_border = 1,
plot_rhone=F, plot_ticino=F, plot_inn=F,lines_rhone=F, lines_ticino=F, lines_inn=F,
width_order = T, cex_order=1,orders=4,
axes="degree",scalebar=T)
?river_plot()
river_plot(border_outline = T, width_border = 1,
plot_rhone=F, plot_ticino=F, plot_inn=F,lines_rhone=F, lines_ticino=F, lines_inn=F,
width_order = T, cex_order=2,orders=4,
axes="degree",scalebar=T)
river_plot(border_outline = T, width_border = 1,
plot_rhone=F, plot_ticino=F, plot_inn=F,lines_rhone=F, lines_ticino=F, lines_inn=F, col_country="white",
width_order = T, cex_order=2,orders=4,
axes="degree",scalebar=T)
pdf("~/Documents/Research/1.Projects/Eawag/Projects/12.RivNet/3.Results/Figures/PieCharts_IBCH.pdf", width=10, height=10)
#Load map
river_plot(border_outline = T, width_border = 1,
plot_rhone=F, plot_ticino=F, plot_inn=F,lines_rhone=F, lines_ticino=F, lines_inn=F, width_country=0,
width_order = T, cex_order=2,orders=4,
axes="degree",scalebar=T)
#?river_plot()
dev.off()
pdf("~/Documents/Research/1.Projects/Eawag/Projects/12.RivNet/3.Results/Figures/PieCharts_IBCH.pdf", width=10, height=10)
#Load map
river_plot(border_outline = T, width_border = 1,
plot_rhone=F, plot_ticino=F, plot_inn=F,lines_rhone=F, lines_ticino=F, lines_inn=F, width_country=0,
width_order = T, cex_order=2,orders=3,
axes="degree",scalebar=T)
#?river_plot()
dev.off()
pdf("~/Documents/Research/1.Projects/Eawag/Projects/12.RivNet/3.Results/Figures/PieCharts_IBCH.pdf", width=10, height=10)
#Load map
river_plot(border_outline = T, width_border = 1,
plot_rhone=F, plot_ticino=F, plot_inn=F,lines_rhone=F, lines_ticino=F, lines_inn=F, width_country=0,
width_order = T, cex_order=0.5,orders=3,
axes="degree",scalebar=T)
#?river_plot()
dev.off()
pdf("~/Documents/Research/1.Projects/Eawag/Projects/12.RivNet/3.Results/Figures/PieCharts_IBCH.pdf", width=10, height=10)
#Load map
river_plot(border_outline = T, width_border = 1,
plot_rhone=F, plot_ticino=F, plot_inn=F,lines_rhone=F, lines_ticino=F, lines_inn=F, width_country=0,
width_order = T, cex_order=0.5,orders=3,
axes="degree",scalebar=T)
#Add pie charts
#Create a custom color scale for all figures
myColors <- c('#4daf4a','#a65628','#984ea3','#ff7f00','#ffff33','#e41a1c','#f781bf')
names(myColors) <- colnames(fun.mat.IBCH)
for(i in 1:364){
floating.pieF(xpos=rivnet$x[i],ypos=rivnet$y[i],x=as.integer(fun.mat.IBCH[i,]),radius=2500,
col=myColors)
}
#radius=3200
#NEED TO USE FLORIAN FLOATING PIE BECAUSE THE NORMAL FUNCTION SKIP VALUE 0 WHICH CREATE AN ISSUE WITH COLOR CODE
legend("topleft",c("Grazer","Shredder","Gatherer-collector","Active filter feeder","Passive filter feeder","Predator","Parasite"),
col=myColors,pch=16,ncol=2,bty="n",cex=2)
dev.off()
pdf("~/Documents/Research/1.Projects/Eawag/Projects/12.RivNet/3.Results/Figures/PieCharts_IBCH.pdf", width=10, height=10)
#Load map
river_plot(border_outline = T, width_border = 1,
plot_rhone=F, plot_ticino=F, plot_inn=F,lines_rhone=F, lines_ticino=F, lines_inn=F, width_country=0,
width_order = T, cex_order=0.5,orders=3,
axes="degree",scalebar=T)
#Add pie charts
#Create a custom color scale for all figures
myColors <- c('#4daf4a','#a65628','#984ea3','#ff7f00','#ffff33','#e41a1c','#f781bf')
names(myColors) <- colnames(fun.mat.IBCH)
for(i in 1:364){
floating.pieF(xpos=rivnet$x[i],ypos=rivnet$y[i],x=as.integer(fun.mat.IBCH[i,]),radius=2500,
col=myColors)
}
#radius=3200
#NEED TO USE FLORIAN FLOATING PIE BECAUSE THE NORMAL FUNCTION SKIP VALUE 0 WHICH CREATE AN ISSUE WITH COLOR CODE
# legend("topleft",c("Grazer","Shredder","Gatherer-collector","Active filter feeder","Passive filter feeder","Predator","Parasite"),
#        col=myColors,pch=16,ncol=2,bty="n",cex=2)
dev.off()
pdf("~/Documents/Research/1.Projects/Eawag/Projects/12.RivNet/3.Results/Figures/PieCharts_IBCH.pdf", width=10, height=10)
#Load map
river_plot(border_outline = T, width_border = 1,
plot_rhone=F, plot_ticino=F, plot_inn=F,lines_rhone=F, lines_ticino=F, lines_inn=F, width_country=0,
width_order = T, cex_order=0.5,orders=3,
axes="degree",scalebar=T)
dev.off()
pdf("~/Documents/Research/1.Projects/Eawag/Projects/12.RivNet/3.Results/Figures/PieCharts_IBCH.pdf", width=10, height=10)
#Load map
river_plot(border_outline = T, width_border = 1,
plot_rhone=F, plot_ticino=F, plot_inn=F,lines_rhone=F, lines_ticino=F, lines_inn=F, width_country=0,
width_order = T, cex_order=1,orders=3,
axes="degree",scalebar=T)
dev.off()
rivnet$x
pdf("~/Documents/Research/1.Projects/Eawag/Projects/12.RivNet/3.Results/Figures/PieCharts_IBCH.pdf", width=10, height=10)
#Load map
river_plot(border_outline = T, width_border = 1,
plot_rhone=F, plot_ticino=F, plot_inn=F,lines_rhone=F, lines_ticino=F, lines_inn=F, width_country=0,
width_order = T, cex_order=1,orders=3,
axes="degree",scalebar=T)
#Add pie charts
#Create a custom color scale for all figures
myColors <- c('#4daf4a','#a65628','#984ea3','#ff7f00','#ffff33','#e41a1c','#f781bf')
names(myColors) <- colnames(fun.mat.IBCH)
for(i in 1:364){
floating.pieF(xpos=rivnet$x[i],ypos=rivnet$y[i],x=as.integer(fun.mat.IBCH[i,]),radius=2500,
col=myColors)
}
#radius=3200
#NEED TO USE FLORIAN FLOATING PIE BECAUSE THE NORMAL FUNCTION SKIP VALUE 0 WHICH CREATE AN ISSUE WITH COLOR CODE
# legend("topleft",c("Grazer","Shredder","Gatherer-collector","Active filter feeder","Passive filter feeder","Predator","Parasite"),
#        col=myColors,pch=16,ncol=2,bty="n",cex=2)
dev.off()
'#4daf4a'
myColors <- c('#4daf4a','#a65628','#2c7bb6','#ff7f00','#ffff33','#e41a1c','#f781bf')
pdf("~/Documents/Research/1.Projects/Eawag/Projects/12.RivNet/3.Results/Figures/PieCharts_IBCH.pdf", width=10, height=10)
#Load map
river_plot(border_outline = T, width_border = 1,
plot_rhone=F, plot_ticino=F, plot_inn=F,lines_rhone=F, lines_ticino=F, lines_inn=F, width_country=0,
width_order = T, cex_order=1,orders=3,
axes="degree",scalebar=T)
#Add pie charts
#Create a custom color scale for all figures
myColors <- c('#4daf4a','#a65628','#2c7bb6','#ff7f00','#ffff33','#e41a1c','#f781bf')
'#984ea3'
names(myColors) <- colnames(fun.mat.IBCH)
for(i in 1:364){
floating.pieF(xpos=rivnet$x[i],ypos=rivnet$y[i],x=as.integer(fun.mat.IBCH[i,]),radius=2500,
col=myColors)
}
#radius=3200
#NEED TO USE FLORIAN FLOATING PIE BECAUSE THE NORMAL FUNCTION SKIP VALUE 0 WHICH CREATE AN ISSUE WITH COLOR CODE
# legend("topleft",c("Grazer","Shredder","Gatherer-collector","Active filter feeder","Passive filter feeder","Predator","Parasite"),
#        col=myColors,pch=16,ncol=2,bty="n",cex=2)
dev.off()
pdf("~/Documents/Research/1.Projects/Eawag/Projects/12.RivNet/3.Results/Figures/PieCharts_IBCH.pdf", width=10, height=5)
#Load map
river_plot(border_outline = T, width_border = 1,
plot_rhone=F, plot_ticino=F, plot_inn=F,lines_rhone=F, lines_ticino=F, lines_inn=F, width_country=0,
width_order = T, cex_order=1,orders=3,
axes="degree",scalebar=T)
#Add pie charts
#Create a custom color scale for all figures
myColors <- c('#4daf4a','#a65628','#2c7bb6','#ff7f00','#ffff33','#e41a1c','#f781bf')
#'#984ea3'old GAT color
names(myColors) <- colnames(fun.mat.IBCH)
for(i in 1:364){
floating.pieF(xpos=rivnet$x[i],ypos=rivnet$y[i],x=as.integer(fun.mat.IBCH[i,]),radius=2500,
col=myColors)
}
#radius=3200
#NEED TO USE FLORIAN FLOATING PIE BECAUSE THE NORMAL FUNCTION SKIP VALUE 0 WHICH CREATE AN ISSUE WITH COLOR CODE
# legend("topleft",c("Grazer","Shredder","Gatherer-collector","Active filter feeder","Passive filter feeder","Predator","Parasite"),
#        col=myColors,pch=16,ncol=2,bty="n",cex=2)
dev.off()
pdf("~/Documents/Research/1.Projects/Eawag/Projects/12.RivNet/3.Results/Figures/PieCharts_IBCH.pdf", width=12, height=8)
#Load map
river_plot(border_outline = F, width_border = 1,
plot_rhone=F, plot_ticino=F, plot_inn=F,lines_rhone=F, lines_ticino=F, lines_inn=F, col_country="white",
width_order = T, cex_order=1,orders=3,
axes="degree",scalebar=T)
#Add pie charts
#Create a custom color scale for all figures
myColors <- c('#4daf4a','#a65628','#2c7bb6','#ff7f00','#ffff33','#e41a1c','#f781bf')
#'#984ea3'old GAT color
names(myColors) <- colnames(fun.mat.IBCH)
for(i in 1:364){
floating.pieF(xpos=rivnet$x[i],ypos=rivnet$y[i],x=as.integer(fun.mat.IBCH[i,]),radius=2500,
col=myColors)
}
#radius=3200
#NEED TO USE FLORIAN FLOATING PIE BECAUSE THE NORMAL FUNCTION SKIP VALUE 0 WHICH CREATE AN ISSUE WITH COLOR CODE
# legend("topleft",c("Grazer","Shredder","Gatherer-collector","Active filter feeder","Passive filter feeder","Predator","Parasite"),
#        col=myColors,pch=16,ncol=2,bty="n",cex=2)
dev.off()
pdf("~/Documents/Research/1.Projects/Eawag/Projects/12.RivNet/3.Results/Figures/PieCharts_IBCH.pdf", width=12, height=8)
#Load map
river_plot(border_outline = F, width_border = 1, color_rhine="white",lakes=F,
plot_rhone=F, plot_ticino=F, plot_inn=F,lines_rhone=F, lines_ticino=F, lines_inn=F, col_country="white",
width_order = T, cex_order=1,orders=3,
axes="degree",scalebar=T)
#Add pie charts
#Create a custom color scale for all figures
myColors <- c('#4daf4a','#a65628','#2c7bb6','#ff7f00','#ffff33','#e41a1c','#f781bf')
#'#984ea3'old GAT color
names(myColors) <- colnames(fun.mat.IBCH)
for(i in 1:364){
floating.pieF(xpos=rivnet$x[i],ypos=rivnet$y[i],x=as.integer(fun.mat.IBCH[i,]),radius=2500,
col=myColors)
}
#radius=3200
#NEED TO USE FLORIAN FLOATING PIE BECAUSE THE NORMAL FUNCTION SKIP VALUE 0 WHICH CREATE AN ISSUE WITH COLOR CODE
# legend("topleft",c("Grazer","Shredder","Gatherer-collector","Active filter feeder","Passive filter feeder","Predator","Parasite"),
#        col=myColors,pch=16,ncol=2,bty="n",cex=2)
dev.off()
pdf("~/Documents/Research/1.Projects/Eawag/Projects/12.RivNet/3.Results/Figures/PieCharts_IBCH.pdf", width=12, height=8)
#Load map
river_plot(border_outline = F, width_border = 1, color_rhine="white",lakes=F,
plot_rhone=F, plot_ticino=F, plot_inn=F,lines_rhone=F, lines_ticino=F, lines_inn=F, col_country="white",
width_order = T, cex_order=1,orders=3,
axes="degree",scalebar=T)
#Add pie charts
#Create a custom color scale for all figures
myColors <- c('#4daf4a','#a65628','#2c7bb6','#ff7f00','#ffff33','#e41a1c','#f781bf')
#'#984ea3'old GAT color
names(myColors) <- colnames(fun.mat.IBCH)
for(i in 1:364){
floating.pieF(xpos=rivnet$x[i],ypos=rivnet$y[i],x=as.integer(fun.mat.IBCH[i,]),radius=2500,
col=myColors)
}
#radius=3200
#NEED TO USE FLORIAN FLOATING PIE BECAUSE THE NORMAL FUNCTION SKIP VALUE 0 WHICH CREATE AN ISSUE WITH COLOR CODE
# legend("topleft",c("Grazer","Shredder","Gatherer-collector","Active filter feeder","Passive filter feeder","Predator","Parasite"),
#        col=myColors,pch=16,ncol=2,bty="n",cex=2)
dev.off()
dev.off()
dev.off()
pdf("~/Documents/Research/1.Projects/Eawag/Projects/12.RivNet/3.Results/Figures/PieCharts_IBCH.pdf", width=12, height=8)
#Load map
river_plot(border_outline = F, width_border = 1, color_rhine="white",lakes=F,
plot_rhone=F, plot_ticino=F, plot_inn=F,lines_rhone=F, lines_ticino=F, lines_inn=F, col_country="white",
width_order = T, cex_order=1,orders=3,
axes="degree",scalebar=T)
#Add pie charts
#Create a custom color scale for all figures
myColors <- c('#4daf4a','#a65628','#2c7bb6','#ff7f00','#ffff33','#e41a1c','#f781bf')
#'#984ea3'old GAT color
names(myColors) <- colnames(fun.mat.IBCH)
for(i in 1:364){
floating.pieF(xpos=rivnet$x[i],ypos=rivnet$y[i],x=as.integer(fun.mat.IBCH[i,]),radius=2500,
col=myColors)
}
#radius=3200
#NEED TO USE FLORIAN FLOATING PIE BECAUSE THE NORMAL FUNCTION SKIP VALUE 0 WHICH CREATE AN ISSUE WITH COLOR CODE
# legend("topleft",c("Grazer","Shredder","Gatherer-collector","Active filter feeder","Passive filter feeder","Predator","Parasite"),
#        col=myColors,pch=16,ncol=2,bty="n",cex=2)
dev.off()
pdf("~/Documents/Research/1.Projects/Eawag/Projects/12.RivNet/3.Results/Figures/PieCharts_IBCH.pdf", width=12, height=8)
#Load map
river_plot(border_outline = F, width_border = 1, color_rhine="white",
plot_rhone=F, plot_ticino=F, plot_inn=F,lines_rhone=F, lines_ticino=F, lines_inn=F, col_country="white",
width_order = T, cex_order=1,orders=3,
axes="degree",scalebar=T)
#Add pie charts
#Create a custom color scale for all figures
myColors <- c('#4daf4a','#a65628','#2c7bb6','#ff7f00','#ffff33','#e41a1c','#f781bf')
#'#984ea3'old GAT color
names(myColors) <- colnames(fun.mat.IBCH)
for(i in 1:364){
floating.pieF(xpos=rivnet$x[i],ypos=rivnet$y[i],x=as.integer(fun.mat.IBCH[i,]),radius=2500,
col=myColors)
}
#radius=3200
#NEED TO USE FLORIAN FLOATING PIE BECAUSE THE NORMAL FUNCTION SKIP VALUE 0 WHICH CREATE AN ISSUE WITH COLOR CODE
# legend("topleft",c("Grazer","Shredder","Gatherer-collector","Active filter feeder","Passive filter feeder","Predator","Parasite"),
#        col=myColors,pch=16,ncol=2,bty="n",cex=2)
dev.off()
#from color brewer:['#e41a1c','#377eb8','#4daf4a','#984ea3','#ff7f00','#ffff33','#a65628','#f781bf','#999999']
pdf("~/Documents/Research/1.Projects/Eawag/Projects/12.RivNet/3.Results/Figures/PieCharts_IBCH.pdf", width=12, height=8)
#Load map
river_plot(border_outline = F, width_border = 1,
plot_rhone=F, plot_ticino=F, plot_inn=F,lines_rhone=F, lines_ticino=F, lines_inn=F, col_country="white",
width_order = T, cex_order=1,orders=3,
axes="degree",scalebar=T)
#Add pie charts
#Create a custom color scale for all figures
myColors <- c('#4daf4a','#a65628','#2c7bb6','#ff7f00','#ffff33','#e41a1c','#f781bf')
#'#984ea3'old GAT color
names(myColors) <- colnames(fun.mat.IBCH)
for(i in 1:364){
floating.pieF(xpos=rivnet$x[i],ypos=rivnet$y[i],x=as.integer(fun.mat.IBCH[i,]),radius=2500,
col=myColors)
}
#radius=3200
#NEED TO USE FLORIAN FLOATING PIE BECAUSE THE NORMAL FUNCTION SKIP VALUE 0 WHICH CREATE AN ISSUE WITH COLOR CODE
# legend("topleft",c("Grazer","Shredder","Gatherer-collector","Active filter feeder","Passive filter feeder","Predator","Parasite"),
#        col=myColors,pch=16,ncol=2,bty="n",cex=2)
dev.off()
river_plot(border_outline = F, width_border = 1,lakes=F,
plot_rhone=F, plot_ticino=F, plot_inn=F,lines_rhone=F, lines_ticino=F, lines_inn=F, col_country="white",
width_order = T, cex_order=1,orders=3,
axes="degree",scalebar=T)
river_plot(border_outline = T, width_border = 1,lakes=F,
plot_rhone=F, plot_ticino=F, plot_inn=F,lines_rhone=F, lines_ticino=F, lines_inn=F, col_country="white",
width_order = T, cex_order=1,orders=3,
axes="degree",scalebar=T)
pdf("~/Documents/Research/1.Projects/Eawag/Projects/12.RivNet/3.Results/Figures/PieCharts_IBCH.pdf", width=12, height=8)
#Load map
river_plot(border_outline = F, width_border = 1,lakes=F,
plot_rhone=F, plot_ticino=F, plot_inn=F,lines_rhone=F, lines_ticino=F, lines_inn=F, col_country="white",
width_order = T, cex_order=1,orders=3,
axes="degree",scalebar=T)
#Add pie charts
#Create a custom color scale for all figures
myColors <- c('#4daf4a','#a65628','#2c7bb6','#ff7f00','#ffff33','#e41a1c','#f781bf')
#'#984ea3'old GAT color
names(myColors) <- colnames(fun.mat.IBCH)
for(i in 1:364){
floating.pieF(xpos=rivnet$x[i],ypos=rivnet$y[i],x=as.integer(fun.mat.IBCH[i,]),radius=2500,
col=myColors)
}
#radius=3200
#NEED TO USE FLORIAN FLOATING PIE BECAUSE THE NORMAL FUNCTION SKIP VALUE 0 WHICH CREATE AN ISSUE WITH COLOR CODE
# legend("topleft",c("Grazer","Shredder","Gatherer-collector","Active filter feeder","Passive filter feeder","Predator","Parasite"),
#        col=myColors,pch=16,ncol=2,bty="n",cex=2)
dev.off()
pdf("~/Documents/Research/1.Projects/Eawag/Projects/12.RivNet/3.Results/Figures/PieCharts_IBCH.pdf", width=12, height=5)
#Load map
river_plot(border_outline = F, width_border = 1,lakes=F,
plot_rhone=F, plot_ticino=F, plot_inn=F,lines_rhone=F, lines_ticino=F, lines_inn=F, col_country="white",
width_order = T, cex_order=1,orders=3,
axes="degree",scalebar=T)
#Add pie charts
#Create a custom color scale for all figures
myColors <- c('#4daf4a','#a65628','#2c7bb6','#ff7f00','#ffff33','#e41a1c','#f781bf')
#'#984ea3'old GAT color
names(myColors) <- colnames(fun.mat.IBCH)
for(i in 1:364){
floating.pieF(xpos=rivnet$x[i],ypos=rivnet$y[i],x=as.integer(fun.mat.IBCH[i,]),radius=2500,
col=myColors)
}
#radius=3200
#NEED TO USE FLORIAN FLOATING PIE BECAUSE THE NORMAL FUNCTION SKIP VALUE 0 WHICH CREATE AN ISSUE WITH COLOR CODE
# legend("topleft",c("Grazer","Shredder","Gatherer-collector","Active filter feeder","Passive filter feeder","Predator","Parasite"),
#        col=myColors,pch=16,ncol=2,bty="n",cex=2)
dev.off()
pdf("~/Documents/Research/1.Projects/Eawag/Projects/12.RivNet/3.Results/Figures/PieCharts_IBCH.pdf", width=8, height=5)
#Load map
river_plot(border_outline = F, width_border = 1,lakes=F,
plot_rhone=F, plot_ticino=F, plot_inn=F,lines_rhone=F, lines_ticino=F, lines_inn=F, col_country="white",
width_order = T, cex_order=1,orders=3,
axes="degree",scalebar=T)
#Add pie charts
#Create a custom color scale for all figures
myColors <- c('#4daf4a','#a65628','#2c7bb6','#ff7f00','#ffff33','#e41a1c','#f781bf')
#'#984ea3'old GAT color
names(myColors) <- colnames(fun.mat.IBCH)
for(i in 1:364){
floating.pieF(xpos=rivnet$x[i],ypos=rivnet$y[i],x=as.integer(fun.mat.IBCH[i,]),radius=2500,
col=myColors)
}
#radius=3200
#NEED TO USE FLORIAN FLOATING PIE BECAUSE THE NORMAL FUNCTION SKIP VALUE 0 WHICH CREATE AN ISSUE WITH COLOR CODE
# legend("topleft",c("Grazer","Shredder","Gatherer-collector","Active filter feeder","Passive filter feeder","Predator","Parasite"),
#        col=myColors,pch=16,ncol=2,bty="n",cex=2)
dev.off()
pdf("~/Documents/Research/1.Projects/Eawag/Projects/12.RivNet/3.Results/Figures/PieCharts_IBCH.pdf", width=13, height=10)
#Load map
river_plot(border_outline = F, width_border = 1,lakes=F,
plot_rhone=F, plot_ticino=F, plot_inn=F,lines_rhone=F, lines_ticino=F, lines_inn=F, col_country="white",
width_order = T, cex_order=1,orders=3,
axes="degree",scalebar=T)
#Add pie charts
#Create a custom color scale for all figures
myColors <- c('#4daf4a','#a65628','#2c7bb6','#ff7f00','#ffff33','#e41a1c','#f781bf')
#'#984ea3'old GAT color
names(myColors) <- colnames(fun.mat.IBCH)
for(i in 1:364){
floating.pieF(xpos=rivnet$x[i],ypos=rivnet$y[i],x=as.integer(fun.mat.IBCH[i,]),radius=2500,
col=myColors)
}
#radius=3200
#NEED TO USE FLORIAN FLOATING PIE BECAUSE THE NORMAL FUNCTION SKIP VALUE 0 WHICH CREATE AN ISSUE WITH COLOR CODE
# legend("topleft",c("Grazer","Shredder","Gatherer-collector","Active filter feeder","Passive filter feeder","Predator","Parasite"),
#        col=myColors,pch=16,ncol=2,bty="n",cex=2)
dev.off()
pdf("~/Documents/Research/1.Projects/Eawag/Projects/12.RivNet/3.Results/Figures/PieCharts_IBCH.pdf", width=13, height=8)
#Load map
river_plot(border_outline = F, width_border = 1,lakes=F,
plot_rhone=F, plot_ticino=F, plot_inn=F,lines_rhone=F, lines_ticino=F, lines_inn=F, col_country="white",
width_order = T, cex_order=1,orders=3,
axes="degree",scalebar=T)
#Add pie charts
#Create a custom color scale for all figures
myColors <- c('#4daf4a','#a65628','#2c7bb6','#ff7f00','#ffff33','#e41a1c','#f781bf')
#'#984ea3'old GAT color
names(myColors) <- colnames(fun.mat.IBCH)
for(i in 1:364){
floating.pieF(xpos=rivnet$x[i],ypos=rivnet$y[i],x=as.integer(fun.mat.IBCH[i,]),radius=2500,
col=myColors)
}
#radius=3200
#NEED TO USE FLORIAN FLOATING PIE BECAUSE THE NORMAL FUNCTION SKIP VALUE 0 WHICH CREATE AN ISSUE WITH COLOR CODE
# legend("topleft",c("Grazer","Shredder","Gatherer-collector","Active filter feeder","Passive filter feeder","Predator","Parasite"),
#        col=myColors,pch=16,ncol=2,bty="n",cex=2)
dev.off()
pdf("~/Documents/Research/1.Projects/Eawag/Projects/12.RivNet/3.Results/Pie_map/PieCharts_IBCH2.pdf", width=13, height=20)
#Load map
river_plot(border_outline = F, width_border = 1,lakes=F,
plot_rhone=F, plot_ticino=F, plot_inn=F,lines_rhone=F, lines_ticino=F, lines_inn=F, col_country="white",
width_order = T, cex_order=1,orders=3,
axes="degree",scalebar=T)
#Add pie charts
#Create a custom color scale for all figures
myColors <- c('#4daf4a','#a65628','#2c7bb6','#ff7f00','#ffff33','#e41a1c','#f781bf')
#'#984ea3'old GAT color
names(myColors) <- colnames(fun.mat.IBCH)
for(i in 1:364){
floating.pieF(xpos=rivnet$x[i],ypos=rivnet$y[i],x=as.integer(fun.mat.IBCH[i,]),radius=2500,
col=myColors)
}
#radius=3200
#NEED TO USE FLORIAN FLOATING PIE BECAUSE THE NORMAL FUNCTION SKIP VALUE 0 WHICH CREATE AN ISSUE WITH COLOR CODE
# legend("topleft",c("Grazer","Shredder","Gatherer-collector","Active filter feeder","Passive filter feeder","Predator","Parasite"),
#        col=myColors,pch=16,ncol=2,bty="n",cex=2)
dev.off()
pdf("~/Documents/Research/1.Projects/Eawag/Projects/12.RivNet/3.Results/Pie_map/PieCharts_IBCH.pdf", width=13, height=8)
#pdf("~/Documents/Research/1.Projects/Eawag/Projects/12.RivNet/3.Results/Pie_map/PieCharts_IBCH2.pdf", width=13, height=20)
#Load map
river_plot(border_outline = T, width_border = 1,lakes=F,
plot_rhone=F, plot_ticino=F, plot_inn=F,lines_rhone=F, lines_ticino=F, lines_inn=F, col_country="white",
width_order = T, cex_order=1,orders=3,
axes="degree",scalebar=T)
#Add pie charts
#Create a custom color scale for all figures
myColors <- c('#4daf4a','#a65628','#2c7bb6','#ff7f00','#ffff33','#e41a1c','#f781bf')
#'#984ea3'old GAT color
names(myColors) <- colnames(fun.mat.IBCH)
for(i in 1:364){
floating.pieF(xpos=rivnet$x[i],ypos=rivnet$y[i],x=as.integer(fun.mat.IBCH[i,]),radius=2500,
col=myColors)
}
#radius=3200
#NEED TO USE FLORIAN FLOATING PIE BECAUSE THE NORMAL FUNCTION SKIP VALUE 0 WHICH CREATE AN ISSUE WITH COLOR CODE
# legend("topleft",c("Grazer","Shredder","Gatherer-collector","Active filter feeder","Passive filter feeder","Predator","Parasite"),
#        col=myColors,pch=16,ncol=2,bty="n",cex=2)
dev.off()
#from color brewer:['#
